# What this program does:
# Multiplies (using adder in a loop) a number from RAM and a number from input buffer (keypad), answer displayed on display
# Assume 1111 is the RAM value that stores the number we want to multiply by

RAM contents:

0000	0111 0000 # Load input into D0
0001	0101 0111 # If D0 isn't 0, go to prog loop
0010	1000 0000 # STOP, ends execution of program
0011	0000 0000 # Will store counter the we'll increment
0100	0000 0000 # Where we'll store answer
0101	0000 0110 # Number we want to multiply by, 6 as example
0110	0000 0001 # 1 for incrementing
Prog:
0111	1010 0100 # Load current answer into D0
1000	1011 0101 # Load number we want to multiply by into D1
1001	0010 0000 # D0=D0+D1
1010	0110 0000 # Prints current answer
1011	1110 0100 # Store D0 into current answer
1100	1010 0011 # Load counter into D0
1101	1011 0110 # Load one into D1
1110	0010 0000 # D0=D0+D1, increment counter
1111	1110 0011 # Store D0 into counter
Rely on natural looping of CPU

SCRAPPED -------------------
0000	1010 1100 # Load current answer into D0
0001	0111 1000 # Take input in D1
0010	0010 0000 # D0=D0+D1
0011	1110 1100 # Store D0 into answer
0100	1010 1111 # Loads multiplier into D0
0101	1011 1110 # Loads 1 into D1 to decrement
0110	0011 0000 # D0=D0-D1
0111	1011 1110 # Load 0 into D1
1000	0101 0000 # BNEQ, if D0 isn't 0, restart program
	1110 1111 # Store decremented mutliplier back
	
1001	1010 1101 # LD D0, 1101, loads what's at 1101 into reg 0, to display
1010	0110 0000 # PRT D0, prints what's stored at D0
1011	1000 0000 # STOP, program is done executing
1100	0000 0000 # Where we'll store answer to display
1101	0000 0001 # One, used to decrement
1110	0000 0000 # Zero, used to compare things and reset vals
1111	0000 0110 # Number we want to multiply by, 6 as example

